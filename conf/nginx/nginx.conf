user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid  /var/run/nginx.pid;

events {
    worker_connections  1024;
    use  epoll;
}

http {
    charset UTF-8;
    include       /etc/nginx/mime.types;
    
    default_type  application/octet-stream;

    server_tokens off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile  on;
    tcp_nopush  on;
    tcp_nodelay  on;

    keepalive_timeout  45;        

    gzip  on;
    # gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 2;
    gzip_min_length 3k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_static on;

    # ssl_protocols  TLSv1.2;
    # ssl_certificate  /etc/nginx/certs/fullchain.pem;
    # ssl_certificate_key  /etc/nginx/certs/privkey.pem;
    # add_header  Strict-transport-Security "max-age=31536000; includeSubdomains";

    # include /etc/nginx/conf.d/*.conf;

    proxy_set_header  X-Real-IP   $remote_addr;
    proxy_set_header  X-Forwarded-For  $remote_addr;
    proxy_set_header  X-Forwarded-Host  $host;
    proxy_set_header  X-Forwarded-Server  $host;
    proxy_set_header  Host  $host;

    server {
        listen  80;
        listen  [::]:80;
        # listen  443 ssl;
        # listen  [::]:443 ssl;
        server_name  default_server;
        return  444;
    }


    # server {
    #     listen  80;
    #     listen  [::]:80;
    #     server_name  ${NGINX_HOST} *.${NGINX_HOST};
    #     return 301  https://$host$request_uri;
    # }

    server {
        listen  80;
        listen  [::]:80;
        server_name  ${NGINX_HOST} *.${NGINX_HOST};
        root  /usr/share/www/html;

        location / {
            index  index.html;
        }

        location /favicon {
            access_log  off;
            log_not_found  off;
        }

        # error_page 404  /40x.html;
        # location = /40x.html{
        #         internal;
        # }

        # error_page 500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root  /usr/share/www/html;
        # }
    }

    # Gitbucket
    server {
        listen  80;
        listen  [::]:80;
        server_name  git.${NGINX_HOST};
        location / {
            proxy_pass  http://gitbucket:8080;
        }
    }

    # Redmine
    server {
        listen  80;
        listen  [::]:80;
        server_name  task.${NGINX_HOST};
        location / {
            proxy_pass  http://redmine:3000;
        }
    }

    # Jenkins
    # server {
    #     listen  80;
    #     listen  [::]:80;
    #     server_name  deploy.${NGINX_HOST};
    #     location / {
    #         proxy_pass  http://jenkins:3030;
    #     }
    # }

    # phpLDAPadmin
    # server {
    #     listen  80;
    #     listen [::]:80;
    #     server_name  admin.${NGINX_HOST};
    #     location / {
    #         proxy_pass  https://admin:4433;
    #     }
    # }
}
